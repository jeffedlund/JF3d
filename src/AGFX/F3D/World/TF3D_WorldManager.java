/**
 * 
 */
package AGFX.F3D.World;

import java.util.ArrayList;

import AGFX.F3D.F3D;
import AGFX.F3D.Camera.TF3D_Camera;
import AGFX.F3D.Entity.TF3D_Entity;

/**
 * @author AndyGFX
 * 
 */
public class TF3D_WorldManager
{
	private int                  current_world        = 0;
	private Boolean              render_world_manualy = false;
	public TF3D_Camera           camera               = null;
	public ArrayList<TF3D_World> items;

	// -----------------------------------------------------------------------
	// TF3D_WorldManager:
	// -----------------------------------------------------------------------
	/**
	 * <BR>
	 * -------------------------------------------------------------------<BR>
	 * Constructor <BR>
	 * -------------------------------------------------------------------<BR>
	 */
	// -----------------------------------------------------------------------
	public TF3D_WorldManager()
	{
		this.current_world = -1;
		this.items = new ArrayList<TF3D_World>();
		// this.camera = new TF3D_Camera("BASE_CAMERA");
	}

	// -----------------------------------------------------------------------
	// TF3D_WorldManager:
	// -----------------------------------------------------------------------
	/**
	 * <BR>
	 * -------------------------------------------------------------------<BR>
	 * Create world <BR>
	 * -------------------------------------------------------------------<BR>
	 * 
	 * @param name
	 *            - name of world
	 */
	// -----------------------------------------------------------------------
	public void CreateWorld(String name)
	{
		TF3D_World w = new TF3D_World(name);
		this.items.add(w);
		this.current_world = this.FindByName(name);
		F3D.Log.info("TF3D_WorldManager", "New world create = " + name);
	}

	// -----------------------------------------------------------------------
	// TF3D_WorldManager:
	// -----------------------------------------------------------------------
	/**
	 * <BR>
	 * -------------------------------------------------------------------<BR>
	 * find world ID by name <BR>
	 * -------------------------------------------------------------------<BR>
	 * 
	 * @param name
	 *            - world name
	 * @return id
	 */
	// -----------------------------------------------------------------------
	public int FindByName(String name)
	{
		int ret = -1;

		for (int i = 0; i < this.items.size(); i++)
		{
			if (this.items.get(i).name.equalsIgnoreCase(name))
			{
				ret = i;
			}
		}
		return ret;
	}

	// -----------------------------------------------------------------------
	// TF3D_WorldManager:
	// -----------------------------------------------------------------------
	/**
	 * <BR>
	 * -------------------------------------------------------------------<BR>
	 * Set world to render <BR>
	 * -------------------------------------------------------------------<BR>
	 * 
	 * @param name
	 *            - world name
	 */
	// -----------------------------------------------------------------------
	public void SetWorld(String name)
	{
		this.current_world = this.FindByName(name);
	}

	// -----------------------------------------------------------------------
	// TF3D_WorldManager:
	// -----------------------------------------------------------------------
	/**
	 * <BR>
	 * -------------------------------------------------------------------<BR>
	 * Add entity to current world <BR>
	 * -------------------------------------------------------------------<BR>
	 * 
	 * @param e
	 *            - entity
	 */
	// -----------------------------------------------------------------------
	public void Add(TF3D_Entity e)
	{
		if (F3D.Worlds.current_world == -1)
		{
			F3D.Log.error("", "You haven't created a WORLD. USE: F3D.Worlds.CreateWorld(<worldname>); ");
		} else
		{
			this.items.get(this.current_world).Add(e);
		}
	}

	// -----------------------------------------------------------------------
	// GetEntity:
	// -----------------------------------------------------------------------
	/**
	 * <BR>
	 * -------------------------------------------------------------------<BR>
	 * Return entity from actual world <BR>
	 * -------------------------------------------------------------------<BR>
	 * 
	 * @param name
	 * @return
	 */
	// -----------------------------------------------------------------------
	public TF3D_Entity GetEntity(String name)
	{
		for (int i = 0; i < this.items.get(this.current_world).entities.size(); i++)
		{
			if (this.items.get(this.current_world).entities.get(i).name.equals(name))
			{
				return this.items.get(this.current_world).entities.get(i);
			}
		}

		return null;
	}

	// -----------------------------------------------------------------------
	// TF3D_WorldManager:
	// -----------------------------------------------------------------------
	/**
	 * <BR>
	 * -------------------------------------------------------------------<BR>
	 * Destroy World from list by name <BR>
	 * -------------------------------------------------------------------<BR>
	 * 
	 * @param name
	 *            - world name
	 */
	// -----------------------------------------------------------------------
	public void Destroy(String name)
	{
		int id = this.FindByName(name);
		this.items.get(id).Destroy();
		this.items.remove(id);
	}

	// -----------------------------------------------------------------------
	// TF3D_WorldManager:
	// -----------------------------------------------------------------------
	/**
	 * <BR>
	 * -------------------------------------------------------------------<BR>
	 * Destroy World from list by ID <BR>
	 * -------------------------------------------------------------------<BR>
	 * 
	 * @param id
	 */
	// -----------------------------------------------------------------------
	public void Destroy(int id)
	{
		this.items.get(id).Destroy();
		this.items.remove(id);
	}

	// -----------------------------------------------------------------------
	// TF3D_WorldManager:
	// -----------------------------------------------------------------------
	/**
	 * <BR>
	 * -------------------------------------------------------------------<BR>
	 * Destroy all WORLDS <BR>
	 * -------------------------------------------------------------------<BR>
	 */
	// -----------------------------------------------------------------------
	public void Destroy()
	{
		for (int i = 0; i < this.items.size(); i++)
		{
			this.items.get(i).Destroy();
			this.items.remove(i);
		}
	}

	// -----------------------------------------------------------------------
	// TF3D_WorldManager:
	// -----------------------------------------------------------------------
	/**
	 * <BR>
	 * -------------------------------------------------------------------<BR>
	 * REnder current world <BR>
	 * -------------------------------------------------------------------<BR>
	 */
	// -----------------------------------------------------------------------
	public void RenderWorld()
	{
		if (!this.render_world_manualy)
		{
			if (this.current_world >= 0)
			{
				this.items.get(this.current_world).Render();
			}
		}
	}

	// -----------------------------------------------------------------------
	// TF3D_WorldManager:
	// -----------------------------------------------------------------------
	/**
	 * <BR>
	 * -------------------------------------------------------------------<BR>
	 * REnder current world <BR>
	 * -------------------------------------------------------------------<BR>
	 */
	// -----------------------------------------------------------------------
	public void RenderWorld(int id)
	{

		if (id >= 0)
		{
			this.items.get(id).Render();
		}

	}

	public void SetCamera(TF3D_Camera cam)
	{
		this.camera = cam;
	}

	public TF3D_Camera GetCamera()
	{
		return this.camera;
	}

	// -----------------------------------------------------------------------
	// TF3D_WorldManager:
	// -----------------------------------------------------------------------
	/**
	 * <BR>
	 * -------------------------------------------------------------------<BR>
	 * Update current world <BR>
	 * -------------------------------------------------------------------<BR>
	 */
	// -----------------------------------------------------------------------
	public void UpdateWorld()
	{
		if (this.camera != null)
		{
			this.camera.Update();

		}

		if (!this.render_world_manualy)
		{
			// F3D.Cameras.Update();

			if (this.current_world >= 0)
			{
				this.items.get(this.current_world).Update();
			}
		}
	}

	// -----------------------------------------------------------------------
	// TF3D_WorldManager:
	// -----------------------------------------------------------------------
	/**
	 * <BR>
	 * -------------------------------------------------------------------<BR>
	 * Update current world <BR>
	 * -------------------------------------------------------------------<BR>
	 */
	// -----------------------------------------------------------------------
	public void UpdateWorld(int id)
	{
		if (this.camera != null)
			this.camera.Update();

		if (id >= 0)
		{
			this.items.get(this.current_world).Update();
		}
	}

	// -----------------------------------------------------------------------
	// TF3D_WorldManager:
	// -----------------------------------------------------------------------
	/**
	 * <BR>
	 * -------------------------------------------------------------------<BR>
	 * Enable render + update control call manualy <BR>
	 * -------------------------------------------------------------------<BR>
	 */
	// -----------------------------------------------------------------------
	public void RenderManualy()
	{
		this.render_world_manualy = true;
	}

	// -----------------------------------------------------------------------
	// TF3D_WorldManager:
	// -----------------------------------------------------------------------
	/**
	 * <BR>
	 * -------------------------------------------------------------------<BR>
	 * Enable render + update control call self <BR>
	 * -------------------------------------------------------------------<BR>
	 */
	// -----------------------------------------------------------------------
	public void RenderAutomatic()
	{
		this.render_world_manualy = false;
	}

	// -----------------------------------------------------------------------
	// TF3D_WorldManager:
	// -----------------------------------------------------------------------
	/**
	 * <BR>
	 * -------------------------------------------------------------------<BR>
	 * Remove entity from current world <BR>
	 * -------------------------------------------------------------------<BR>
	 * 
	 * @param worldname
	 *            - world name
	 * @param e
	 *            - entity object
	 */
	// -----------------------------------------------------------------------
	public void RemoveEntity(String worldname, TF3D_Entity e)
	{
		int id = this.FindByName(worldname);
		this.items.get(id).RemoveEntity(e);
	}

	// -----------------------------------------------------------------------
	// TF3D_WorldManager:
	// -----------------------------------------------------------------------
	/**
	 * <BR>
	 * -------------------------------------------------------------------<BR>
	 * Remove entity from current world <BR>
	 * -------------------------------------------------------------------<BR>
	 * 
	 * @param worldname
	 *            - world name
	 * @param entityname
	 *            - entity name
	 */
	// -----------------------------------------------------------------------
	public void RemoveEntity(String worldname, String entityname)
	{
		int id = this.FindByName(worldname);
		this.items.get(id).RemoveEntiy(entityname);
	}

	// -----------------------------------------------------------------------
	// TF3D_WorldManager:
	// -----------------------------------------------------------------------
	/**
	 * <BR>
	 * -------------------------------------------------------------------<BR>
	 * Remove entity from current world <BR>
	 * -------------------------------------------------------------------<BR>
	 * 
	 * @param worldname
	 *            - world name
	 * @param eid
	 *            - entity ID
	 */
	// -----------------------------------------------------------------------
	public void RemoveEntity(String worldname, int eid)
	{
		int id = this.FindByName(worldname);
		this.items.get(id).RemoveEntiy(eid);
	}
	
	
	// -----------------------------------------------------------------------
	// TF3D_WorldManager: 
	// -----------------------------------------------------------------------
	/**
	 * <BR>-------------------------------------------------------------------<BR> 
	 *  get current ID of selected world
	 * <BR>-------------------------------------------------------------------<BR> 
	 * @return - world ID 
	 */
	// -----------------------------------------------------------------------
	public int GetCurrentID()
	{
		return this.current_world;
	}
	
	// -----------------------------------------------------------------------
	// TF3D_WorldManager: 
	// -----------------------------------------------------------------------
	/**
	 * <BR>-------------------------------------------------------------------<BR> 
	 *  get current NAME of selected world
	 * <BR>-------------------------------------------------------------------<BR> 
	 * @return - world name 
	 */
	// -----------------------------------------------------------------------
	public String GetCurrentName()
	{
		return this.items.get(this.current_world).name;
	}
}
